#!/usr/bin/env python3
"""
Script para limpar locks √≥rf√£os do Dashboard Mega Sena
=====================================================

Use este script se a aplica√ß√£o n√£o conseguir iniciar devido a locks √≥rf√£os.
"""

import os
import subprocess
import sys

LOCK_FILE = "app.lock"
PID_FILE = "app.pid"

def cleanup_locks():
    """Remove locks √≥rf√£os"""
    print("üßπ Limpando locks √≥rf√£os do Dashboard Mega Sena...")
    
    try:
        # Check if lock files exist
        if os.path.exists(LOCK_FILE) or os.path.exists(PID_FILE):
            
            # Try to read PID if exists
            old_pid = None
            if os.path.exists(PID_FILE):
                try:
                    with open(PID_FILE, 'r') as f:
                        old_pid = int(f.read().strip())
                    print(f"üìã PID encontrado no arquivo: {old_pid}")
                except:
                    print("‚ö†Ô∏è  N√£o foi poss√≠vel ler o arquivo PID")
            
            # Check if process is still running
            if old_pid:
                try:
                    result = subprocess.run(['tasklist', '/FI', f'PID eq {old_pid}'], 
                                          capture_output=True, text=True)
                    if str(old_pid) in result.stdout:
                        print(f"‚ö†Ô∏è  Processo {old_pid} ainda est√° rodando!")
                        response = input("Deseja for√ßar o encerramento? (s/N): ")
                        if response.lower() in ['s', 'sim', 'y', 'yes']:
                            subprocess.run(['taskkill', '/F', '/PID', str(old_pid)])
                            print(f"üõë Processo {old_pid} encerrado")
                        else:
                            print("‚ùå Opera√ß√£o cancelada")
                            return False
                    else:
                        print(f"‚úÖ Processo {old_pid} n√£o est√° mais rodando")
                except Exception as e:
                    print(f"‚ö†Ô∏è  Erro ao verificar processo: {e}")
            
            # Remove lock files
            if os.path.exists(LOCK_FILE):
                os.remove(LOCK_FILE)
                print("üóëÔ∏è  Arquivo app.lock removido")
            
            if os.path.exists(PID_FILE):
                os.remove(PID_FILE)
                print("üóëÔ∏è  Arquivo app.pid removido")
            
            print("‚úÖ Limpeza conclu√≠da! Agora voc√™ pode executar o Dashboard novamente.")
            
        else:
            print("‚úÖ Nenhum lock √≥rf√£o encontrado")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante a limpeza: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîß LIMPADOR DE LOCKS - Dashboard Mega Sena")
    print("=" * 50)
    
    if cleanup_locks():
        print("\nüéâ Limpeza realizada com sucesso!")
        print("   Agora voc√™ pode executar: python app.py")
    else:
        print("\n‚ùå Falha na limpeza dos locks")
        sys.exit(1)

if __name__ == "__main__":
    main()
